@model IEnumerable<KPIMonitor.Models.KpiAction>
@{
    var kpiId = (decimal)(ViewBag.KpiId ?? 0m);
    Func<KPIMonitor.Models.KpiAction, string> sLbl = a => a.StatusCode switch {
        "inprogress" => "In Progress",
        "done" => "Done",
        _ => "To Do"
    };
}
<div class="table-responsive">
    <table class="table table-striped table-bordered align-middle mb-0">
        <thead class="table-light">
            <tr>
                <th>Owner</th>
                <th>Assigned</th>
                <th>Action</th>
                <th>Deadline</th>
                <th>Status</th>
                <th>Ext</th>
                <th>Update</th>
            </tr>
        </thead>
        <tbody>
        @if (Model.Any())
        {
            foreach (var a in Model)
            {
                <tr>
                    <td>@a.Owner</td>
                    <td>@(a.AssignedAt?.ToString("yyyy-MM-dd HH:mm") ?? "—")</td>
                    <td>@a.Description</td>
                    <td>@(a.DueDate?.ToString("yyyy-MM-dd") ?? "—")</td>
                    <td>@sLbl(a)</td>
                    <td>@a.ExtensionCount</td>
                    <td class="text-nowrap">
                        <form class="d-inline" method="post" asp-action="SetStatus" asp-controller="RedBoard" onsubmit="return submitInline(this, reloadActions)">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="actionId" value="@a.ActionId" />
                            <select class="form-select form-select-sm d-inline-block w-auto me-1" name="statusCode">
                                <option value="todo" @(a.StatusCode=="todo"?"selected":"")>To Do</option>
                                <option value="inprogress" @(a.StatusCode=="inprogress"?"selected":"")>In Progress</option>
                                <option value="done" @(a.StatusCode=="done"?"selected":"")>Done</option>
                            </select>
                            <button class="btn btn-sm btn-outline-secondary">Set</button>
                        </form>

                        <form class="d-inline ms-2" method="post" asp-action="MoveDeadline" asp-controller="RedBoard" onsubmit="return submitInline(this, reloadActions)">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="actionId" value="@a.ActionId" />
                            <input type="date" class="form-control form-control-sm d-inline-block w-auto me-1" name="newDueDate" required />
                            <input type="text" class="form-control form-control-sm d-inline-block w-auto me-1" name="reason" placeholder="Reason (opt.)" />
                            <button class="btn btn-sm btn-outline-primary">Move</button>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="7" class="text-center text-muted">No actions yet.</td></tr>
        }
        </tbody>
    </table>
</div>
<script>
  function submitInline(form, done){
    const fd = new FormData(form);
    fetch(form.action, { method:'POST', body:fd, headers:{'X-Requested-With':'XMLHttpRequest'} })
      .then(r => { if(!r.ok) throw new Error('Save failed'); return r.json().catch(()=>({})); })
      .then(()=> done && done())
      .catch(e => alert(e.message));
    return false;
  }
</script>