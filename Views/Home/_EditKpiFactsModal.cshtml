@model KPIMonitor.ViewModels.KpiEditModalVm
<style>
  /* Shade/grey out anything not editable inside the modal */
  #editKpiModal input.form-control[readonly] {
    background-color: #f3f4f6 !important; /* light grey */
    color: #6c757d !important;            /* muted text */
    border-color: #e5e7eb !important;
    cursor: not-allowed;
  }
  /* Optional tiny lock badge */
  #editKpiModal td.readonly-cell { position: relative; }
  #editKpiModal td.readonly-cell .ro-badge {
    position: absolute; right: 8px; top: 6px;
    font-size: 0.8rem; color: #6c757d;
    pointer-events: none;
  }
</style>

<div class="modal-header">
  <h5 class="modal-title">Edit @Model.KpiName (@Model.Year)</h5>
  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<form id="kpi-edit-form"
      method="post"
      asp-controller="KpiFactChanges"
      asp-action="SubmitBatch">
  @Html.AntiForgeryToken()

  <div class="modal-body">
    <input type="hidden" name="KpiId" value="@Model.KpiId" />
    <input type="hidden" name="Year" value="@Model.Year" />
    <input type="hidden" name="IsMonthly" value="@Model.IsMonthly" />

    @if (Model.IsMonthly)
    {
      <table class="table table-sm align-middle" id="editKpiModal">
        <thead>
          <tr>
            <th>Month</th>
            <th>Actual</th>
            <th>Forecast</th>
            @if (Model.IsSuperAdmin)
            {
              <th>Target</th>
            }
          </tr>
        </thead>
        <tbody>
@for (var m = 1; m <= 12; m++)
{
    var canA = Model.EditableActualKeys.Contains(m);
    var canF = Model.EditableForecastKeys.Contains(m);
    <tr>
      <td>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(m)</td>

      <td class="@(canA ? "" : "readonly-cell")">
        <input class="form-control form-control-sm"
               type="number" step="any" name="Actuals[@m]"
               value="@(Model.Actuals.ContainsKey(m) ? Model.Actuals[m] : null)"
               @(canA ? "" : "readonly aria-readonly=\"true\" title=\"Not editable (outside grace window)\"") />
        @if (!canA) { <span class="ro-badge">ðŸ”’</span> }
      </td>

      <td class="@(canF ? "" : "readonly-cell")">
        <input class="form-control form-control-sm"
               type="number" step="any" name="Forecasts[@m]"
               value="@(Model.Forecasts.ContainsKey(m) ? Model.Forecasts[m] : null)"
               @(canF ? "" : "readonly aria-readonly=\"true\" title=\"Not editable (outside allowed range)\"") />
        @if (!canF) { <span class="ro-badge">ðŸ”’</span> }
      </td>

      @if (Model.IsSuperAdmin)
      {
        <td>
          <input class="form-control form-control-sm"
                 type="number" step="any" name="Targets[@m]"
                 value="@(Model.Targets.ContainsKey(m) ? Model.Targets[m] : null)" />
        </td>
      }
    </tr>
}
        </tbody>
      </table>
    }
    else
    {
      <table class="table table-sm align-middle" id="editKpiModal">
        <thead>
          <tr>
            <th>Quarter</th>
            <th>Actual</th>
            <th>Forecast</th>
            @if (Model.IsSuperAdmin)
            {
              <th>Target</th>
            }
          </tr>
        </thead>
        <tbody>
@for (var q = 1; q <= 4; q++)
{
    var canA = Model.EditableActualKeys.Contains(q);
    var canF = Model.EditableForecastKeys.Contains(q);
    <tr>
      <td>@($"Q{q}")</td>

      <td class="@(canA ? "" : "readonly-cell")">
        <input class="form-control form-control-sm"
               type="number" step="any" name="ActualQuarters[@q]"
               value="@(Model.Actuals.ContainsKey(q) ? Model.Actuals[q] : null)"
               @(canA ? "" : "readonly aria-readonly=\"true\" title=\"Not editable (outside grace window)\"") />
        @if (!canA) { <span class="ro-badge">ðŸ”’</span> }
      </td>

      <td class="@(canF ? "" : "readonly-cell")">
        <input class="form-control form-control-sm"
               type="number" step="any" name="ForecastQuarters[@q]"
               value="@(Model.Forecasts.ContainsKey(q) ? Model.Forecasts[q] : null)"
               @(canF ? "" : "readonly aria-readonly=\"true\" title=\"Not editable (outside allowed range)\"") />
        @if (!canF) { <span class="ro-badge">ðŸ”’</span> }
      </td>

      @if (Model.IsSuperAdmin)
      {
        <td>
          <input class="form-control form-control-sm"
                 type="number" step="any" name="TargetQuarters[@q]"
                 value="@(Model.Targets.ContainsKey(q) ? Model.Targets[q] : null)" />
        </td>
      }
    </tr>
}
        </tbody>
      </table>
    }

    <small class="text-muted d-block">
      Actuals: current period + last closed period within +1 month grace. Forecasts: current &amp; future periods of the year.
      Targets are editable &amp; visible only to Super Admin.
    </small>
  </div>

  <div class="modal-footer">
    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
    <button type="submit" class="btn btn-primary">Save for Approval</button>
  </div>
</form>
