@model KPIMonitor.ViewModels.KpiEditModalVm

<div class="modal-header">
  <h5 class="modal-title">Edit @Model.KpiName (@Model.Year)</h5>
  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<form id="kpi-edit-form"
      method="post"
      asp-controller="KpiFactChanges"
      asp-action="SubmitBatch">
  @Html.AntiForgeryToken()

  <div class="modal-body">
    <input type="hidden" name="KpiId" value="@Model.KpiId" />
    <input type="hidden" name="Year" value="@Model.Year" />
    <input type="hidden" name="IsMonthly" value="@Model.IsMonthly" />

    @if (Model.IsMonthly)
    {
      <table class="table table-sm align-middle">
        <thead>
          <tr>
            <th>Month</th>
            <th>Actual</th>
            <th>Forecast</th>
          </tr>
        </thead>
        <tbody>
          @for (var m = 1; m <= 12; m++)
          {
            var canA = Model.EditableActualKeys.Contains(m);
            var canF = Model.EditableForecastKeys.Contains(m);
            <tr>
              <td>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(m)</td>
              <td>
                <input class="form-control form-control-sm" type="number" step="any" name="Actuals[@m]"
                  value="@(Model.Actuals.ContainsKey(m) ? Model.Actuals[m] : null)" @(!canA ? "readonly" : "") />
              </td>
              <td>
                <input class="form-control form-control-sm" type="number" step="any" name="Forecasts[@m]"
                  value="@(Model.Forecasts.ContainsKey(m) ? Model.Forecasts[m] : null)" @(!canF ? "readonly" : "") />
              </td>
            </tr>
          }
        </tbody>
      </table>
    }
    else
    {
      <table class="table table-sm align-middle">
        <thead>
          <tr>
            <th>Quarter</th>
            <th>Actual</th>
            <th>Forecast</th>
          </tr>
        </thead>
        <tbody>
          @for (var q = 1; q <= 4; q++)
          {
            var canA = Model.EditableActualKeys.Contains(q);
            var canF = Model.EditableForecastKeys.Contains(q);
            <tr>
              <td>@($"Q{q}")</td>
              <td>
                <input class="form-control form-control-sm" type="number" step="any" name="ActualQuarters[@q]"
                  value="@(Model.Actuals.ContainsKey(q) ? Model.Actuals[q] : null)" @(!canA ? "readonly" : "") />
              </td>
              <td>
                <input class="form-control form-control-sm" type="number" step="any" name="ForecastQuarters[@q]"
                  value="@(Model.Forecasts.ContainsKey(q) ? Model.Forecasts[q] : null)" @(!canF ? "readonly" : "") />
              </td>
            </tr>
          }
        </tbody>
      </table>
    }
    <small class="text-muted d-block">
      Actuals: current period + last closed period within +1 month grace. Forecasts: current & future periods of the
      year.
    </small>

  </div>

  <div class="modal-footer">
    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
    <button type="submit" class="btn btn-primary">Save for Approval</button>
  </div>
</form>